name: release
on:
  push:
    tags:
      - 'v[0-9]+.*'
jobs:
  build:
    runs-on: ${{ matrix.os }}
    env:
      # Emit backtraces on panics
      RUST_BACKTRACE: 1
    strategy:
      matrix:
        build: [linux, macos]
      include:
        - build: linux
          os: ubuntu-18.04
          rust: nightly
          target: x86_64-unknown-linux-musl
        - build: macos
          os: macos-latest
          rust: nightly
          target: x86_64-apple-darwin

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
          target: ${{ matrix.target }}
      - name: Build release binary
        run: cargo build --release
      - name: Strip release binary (linux and macos)
        if: matrix.build == 'linux' || matrix.build == 'macos'
        run: strip "target/${{ matrix.target }}/release/dsm"
      - name: Build archive
        run: |
          staging="dsm-${{ github.ref }}-${{ matrix.target }}"
          mkdir -p "$staging"
          cp {README.md,LICENSE} "$staging/"
          cp "target/${{ matrix.target }}/release/dsm" "$staging/"
          tar czf "$staging.tar.gz" "$staging"
          echo "ASSET=$staging.tar.gz" >> $GITHUB_ENV
          ls -al "$staging"
